stages:
  - diff
  - lint
  - unit-tests
  - build
  - e2e-tests
variables:
  KUBECTL: v1.19.3
  KIND: v0.11.1
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
diff:
  stage: diff
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [ "" ]
  tags:
    - go
  before_script:
    - cd documentation/gen && go run .
  script:
    - test -z "$(git diff 2> /dev/null)" || exit "Documentation is not generated, issue \`cd documentation/gen && go run .\` and commit the result"
    - test -z "$(git ls-files --others --exclude-standard 2> /dev/null)" || exit "Documentation created untracked files, cannot proceed"
  only:
    - merge_requests
    - branches
tidy:
  stage: lint
  needs: []
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - go mod tidy
    - test -z "$(git diff 2> /dev/null)" || exit 'Go modules not tidied, issue \`go mod tidy\` and commit the result'
  only:
    - merge_requests
    - branches
golangci_lint:
  stage: lint
  needs: []
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - make lint
  only:
    - merge_requests
    - branches
lint-commit-msg:
  stage: lint
  needs: []
  image:
    name: $CI_REGISTRY_GO/check-commit:v2.1.0
    entrypoint: [""]
  tags:
    - go
  script:
      - /check
  only:
    - merge_requests
unit-tests:
  needs: ["diff", "tidy"]
  stage: unit-tests
  image:
    name: $CI_REGISTRY_GO/haproxy-alpine:2.5-go1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - go build -v .
    - go test -v ./...
  only:
    - merge_requests
    - branches
docker-build:
  stage: build
  needs: []
  image: $CI_REGISTRY_GO/docker:stable-go1.19
  services:
    - name: $CI_REGISTRY_GO/docker:18.09.7-dind
      alias: docker
  tags:
    - go
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_GO
    - go version
    - docker pull -q $CI_REGISTRY_GO/alpine:3
    - docker image tag $CI_REGISTRY_GO/alpine:3 alpine:3
    - docker pull -q $CI_REGISTRY_GO/golang:1.19-alpine
    - docker image tag $CI_REGISTRY_GO/golang:1.19-alpine golang:1.19-alpine
    - sed -i "s~FROM golang~FROM $CI_REGISTRY_GO/golang~g" "build/Dockerfile"
    - sed -i "s~FROM haproxytech/haproxy-alpine~FROM $CI_REGISTRY_GO/haproxy-alpine~g" "build/Dockerfile"
  script:
    - mkdir -p tar
    - make build
    - docker save -o tar/k8sIC.tar haproxytech/kubernetes-ingress:latest
  artifacts:
    when: on_success
    paths:
      - tar
    expire_in: 15 minutes
.kind_deployment:
  stage: e2e-tests
  needs: ["diff", "tidy", "docker-build"]
  image: $CI_REGISTRY_GO/docker:stable-go1.19
  services:
    - name: $CI_REGISTRY_GO/docker:18.09.7-dind
      alias: docker
  tags:
    - go
  artifacts:
    paths:
      - tar
    expire_in: 30 minutes
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_GO
    - docker load -i tar/k8sIC.tar
    - go version
    - go mod download &
    #- docker pull -q $CI_REGISTRY_GO/alpine:3
    #- docker image tag $CI_REGISTRY_GO/alpine:3 alpine:3
    #- docker pull -q $CI_REGISTRY_GO/golang:1.19-alpine
    #- docker image tag $CI_REGISTRY_GO/golang:1.19-alpine golang:1.19-alpine
    - docker pull -q $CI_REGISTRY_GO/haproxytech/http-echo:latest
    - docker image tag $CI_REGISTRY_GO/haproxytech/http-echo:latest haproxytech/http-echo:latest
    - wget -nv -O /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND}/kind-linux-amd64
    - chmod +x /usr/local/bin/kind
    - wget -q -o /dev/null -O &> /dev/null /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL}/bin/linux/amd64/kubectl
    - chmod +x /usr/local/bin/kubectl
    - sed -i "s/K8S_VERSION/$K8S_VERSION/g" ".gitlab/kind-config.yaml"
    - sed -i "s~CI_REGISTRY_GO~$CI_REGISTRY_GO~g" ".gitlab/kind-config.yaml"
    - sed -i "s~FROM golang~FROM $CI_REGISTRY_GO/golang~g" "build/Dockerfile"
    - sed -i "s~FROM haproxytech/haproxy-alpine~FROM $CI_REGISTRY_GO/haproxy-alpine~g" "build/Dockerfile"
    - kind create cluster --name=dev --config=./.gitlab/kind-config.yaml
    - sed -i -E -e "s/localhost|0\.0\.0\.0|127\.0\.0\.1/docker/g" "$HOME/.kube/config"
    - sed -i -E -e "s/localhost|0\.0\.0\.0|127\.0\.0\.1/docker/g" "deploy/tests/e2e/client.go"
    - until kubectl get nodes -o wide;do sleep 2; done
    - kubectl get pods -A
  after_script:
    - kubectl get pods -A
    - kind delete cluster --name=dev
  only:
    - merge_requests
    - branches
  parallel:
    matrix:
      - TEST_PART: [ "18#e2e_parallel", "18#e2e_https", "1#e2e_sequential" ]
        VAR_DUMMY: "YES"
  script:
    - CI_ENV=gitlab deploy/tests/create.sh
    - kubectl get pods -A
    - IFS='#' read -r -a array <<< $TEST_PART; echo "running tests with --tags=${array[1]}"
    - IFS='#' read -r -a array <<< $TEST_PART; KIND_URL=docker CGO_ENABLED=0 go test -v -p ${array[0]} ./deploy/tests/e2e/... --tags=${array[1]}
.kind_deployment_schedules:
  only:
    - schedules
  extends: .kind_deployment
k8s_18:
  variables:
    K8S_VERSION: v1.18.19
  extends: .kind_deployment_schedules
k8s_19:
  variables:
    K8S_VERSION: v1.19.11
  extends: .kind_deployment_schedules
k8s_20:
  variables:
    K8S_VERSION: v1.20.7
  extends: .kind_deployment_schedules
k8s_21:
  variables:
    K8S_VERSION: v1.21.1
  extends: .kind_deployment
